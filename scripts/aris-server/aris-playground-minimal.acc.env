### ACC commands to spin up a minimal design server on node aris-server

# 01. zookeeper
register app type zoo_s com.aris.runnables.zookeeper-run-prod 10.0.22.0 defaults JAVA-Xmx="48m" clientPort=14281 JAVA-Dcom.sun.management.jmxremote.authenticate="false" JAVA-Dcom.sun.management.jmxremote.port="14296" JAVA-Dcom.sun.management.jmxremote.rmi.port="14296" JAVA-Dcom.sun.management.jmxremote.ssl="false" JAVA-Dcom.sun.management.jmxremote="/enabled" JAVA-Dcom.sun.management.jmxremote.local.only="true" ~"JAVA-XX\\:\\+CrashOnOutOfMemoryError"="/enabled" -"JAVA-XX\\:MaxPermSize" JAVA_OPTS="-server" !maxClientCnxns=50 !maxSessionTimeout=60000 !minSessionTimeout=6000 !plugin.ping.disable.level1check=true !quorumListenOnAllIPs=true !tickTime=3000
set acc zkmgr.zookeeper.app.type=zoo_s

# 02. work on one node only
add node n1 aris Clous g3h31m
set current node n1

# The web server from where the cloud agent will download the various components
set remote.repository.url="http://setup-repo"
set acc http.connection.timeout.msec=38000000

# configure zoo_s zoo_s tickTime="60000"
add zk
commit zk changes

#register app type postgres_s com.aris.runnables.PostgreSQL-run-prod 10.0.22.0 defaults dbsp.initialSize=0 dbsp.jmxEnabled=true dbsp.maxIdle=5 dbsp.minIdle=0 dbsp.removeAbandonedTimeout=600 dbsp.rollbackOnReturn=true ~plugin.health.monitoring.value.activeDbConnectionsPercent.high.threshold=90 ~plugin.health.monitoring.value.activeDbConnectionsPercent.number.of.intervals.warning.threshold=30 plugin.max.retries.after.restart=1 plugin.ping.interval.msec=30000 postgresql.max_connections=200 postgresql.port=14240
#set acc esmgr.elasticsearch.app.type=elastic_m


# ?
#configure zoo_s zoo_s tickTime="60000"
#configure zoo_s zoo tickTime="60000"
#configure zoo_s zoo tickTime=60000